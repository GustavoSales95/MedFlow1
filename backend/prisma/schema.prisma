generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model agendamentos {
  id_agendamento Int                  @id @default(autoincrement())
  paciente_id    Int
  medico_id      Int
  nome_paciente  String?              @db.VarChar(100)
  data_hora      DateTime             @db.DateTime(0)
  status         agendamentos_status? @default(Agendado)
  pacientes      pacientes            @relation(fields: [paciente_id], references: [id_paciente], onDelete: NoAction, onUpdate: NoAction, map: "agendamentos_ibfk_1")
  medicos        medicos              @relation(fields: [medico_id], references: [id_medico], onDelete: NoAction, onUpdate: NoAction, map: "agendamentos_ibfk_2")
  consultas      consultas?

  @@index([medico_id], map: "medico_id")
  @@index([paciente_id], map: "paciente_id")
}

model consultas {
  id_consulta    Int             @id @default(autoincrement())
  agendamento_id Int             @unique(map: "agendamento_id")
  descricao      String?         @db.VarChar(255)
  receita        String?         @db.VarChar(255)
  observacoes    String?         @db.VarChar(255)
  data_consulta  DateTime?       @db.DateTime(0)
  agendamentos   agendamentos    @relation(fields: [agendamento_id], references: [id_agendamento], onDelete: NoAction, onUpdate: NoAction, map: "consultas_ibfk_1")
  entrada_saida  entrada_saida[]
}

model medicos {
  id_medico     Int             @id @default(autoincrement())
  usuario_id    Int             @unique(map: "usuario_id")
  crm           String          @unique(map: "crm") @db.VarChar(20)
  especialidade String?         @db.VarChar(50)
  telefone      String?         @db.VarChar(20)
  agendamentos  agendamentos[]
  entrada_saida entrada_saida[]
  usuarios      usuarios        @relation(fields: [usuario_id], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "medicos_ibfk_1")
  receitas      receitas[]
  escala  escala[]
}

model pacientes {
  id_paciente     Int             @id @default(autoincrement())
  nome            String          @db.VarChar(100)
  cpf             String          @unique(map: "cpf") @db.VarChar(14)
  cartao_sus      String?         @unique(map: "cartao_sus") @db.VarChar(15)
  data_nascimento DateTime?       @db.Date
  telefone        String?         @db.VarChar(20)
  cep             String?         @db.VarChar(8)
  endereco        String?         @db.VarChar(255)
  data_cadastro   DateTime?       @default(now()) @db.Timestamp(0)
  agendamentos    agendamentos[]
  entrada_saida   entrada_saida[]
  prontuario      prontuario?
  receitas        receitas[]
}

model perfis {
  id_perfis Int        @id
  tipo      String     @db.VarChar(50)
  usuarios  usuarios[]
}

model prontuario {
  paciente_id         Int       @unique(map: "paciente_id")
  alergias            String?   @db.VarChar(50)
  tipo_sanguineo      String?   @db.VarChar(14)
  medicamentos        String?   @db.VarChar(255)
  cirurgias           String?   @db.VarChar(255)
  doencas_infecciosas String?   @db.VarChar(50)
  pacientes           pacientes @relation(fields: [paciente_id], references: [id_paciente], onDelete: NoAction, onUpdate: NoAction, map: "prontuario_ibfk_1")
}

model usuarios {
  id_usuario      Int             @id @default(autoincrement())
  nome            String          @db.VarChar(100)
  email           String          @unique(map: "email") @db.VarChar(100)
  senha           String          @db.VarChar(255)
  cpf             String          @unique(map: "cpf") @db.VarChar(14)
  data_nascimento DateTime        @db.Date
  data_cadastro   DateTime?       @default(now()) @db.Timestamp(0)
  perfil_id       Int
  entrada_saida   entrada_saida[]
  medicos         medicos?
  perfis          perfis          @relation(fields: [perfil_id], references: [id_perfis], onDelete: NoAction, onUpdate: NoAction, map: "usuarios_ibfk_1")

  @@index([perfil_id], map: "perfil_id")
}

model entrada_saida {
  id_entrada_saida   Int             @id @default(autoincrement())
  id_produto_estoque Int
  quantidade         Int
  id_consulta        Int?
  id_medico          Int?
  id_paciente        Int?
  id_usuario         Int?
  id_pedido          Int?
  tipo_transacao     String          @db.VarChar(7)
  data_transacao     DateTime        @db.DateTime(0)
  consultas          consultas?      @relation(fields: [id_consulta], references: [id_consulta], onDelete: NoAction, onUpdate: NoAction, map: "entrada_saida_ibfk_1")
  medicos            medicos?        @relation(fields: [id_medico], references: [id_medico], onDelete: NoAction, onUpdate: NoAction, map: "entrada_saida_ibfk_2")
  pacientes          pacientes?      @relation(fields: [id_paciente], references: [id_paciente], onDelete: NoAction, onUpdate: NoAction, map: "entrada_saida_ibfk_3")
  usuarios           usuarios?       @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "entrada_saida_ibfk_4")
  produto_estoque    produto_estoque @relation(fields: [id_produto_estoque], references: [id_produto_estoque], onDelete: NoAction, onUpdate: NoAction, map: "entrada_saida_ibfk_5")

  @@index([id_consulta], map: "id_consulta")
  @@index([id_medico], map: "id_medico")
  @@index([id_paciente], map: "id_paciente")
  @@index([id_produto_estoque], map: "id_produto_estoque")
  @@index([id_usuario], map: "id_usuario")
}

model escala {
  id_escala       Int             @id @default(autoincrement())
  id_medico       Int             @unique(map: "id_medico")
  segunda         escala_segunda?
  segunda_horario String?         @default("09:00 - 17:00") @db.VarChar(13)
  terca           escala_terca?
  terca_horario   String?         @default("09:00 - 17:00") @db.VarChar(13)
  quarta          escala_quarta?
  quarta_horario  String?         @default("09:00 - 17:00") @db.VarChar(13)
  quinta          escala_quinta?
  quinta_horario  String?         @default("09:00 - 17:00") @db.VarChar(13)
  sexta           escala_sexta?
  sexta_horario   String?         @default("09:00 - 17:00") @db.VarChar(13)
  sabado          escala_sabado?
  sabado_horario  String?         @default("09:00 - 17:00") @db.VarChar(13)
  domingo         escala_domingo?
  domingo_horario String?         @default("09:00 - 17:00") @db.VarChar(13)
}

model pedidos {
  id_pedido          Int             @id @default(autoincrement())
  id_produto_estoque Int
  quantidade         String?         @db.VarChar(20)
  fornecedor         String          @db.VarChar(100)
  data_pedido        DateTime        @db.Date
  produto_estoque    produto_estoque @relation(fields: [id_produto_estoque], references: [id_produto_estoque], onDelete: NoAction, onUpdate: NoAction, map: "pedidos_ibfk_1")

  @@index([id_produto_estoque], map: "id_produto_estoque")
}

model produto_estoque {
  id_produto_estoque Int             @id @default(autoincrement())
  id_produto         Int
  quantidade         String          @db.VarChar(20)
  validade           DateTime        @db.Date
  entrada_saida      entrada_saida[]
  pedidos            pedidos[]
  produtos           produtos        @relation(fields: [id_produto], references: [id_produto], onDelete: NoAction, onUpdate: NoAction, map: "produto_estoque_ibfk_1")

  @@index([id_produto], map: "id_produto")
}

model produtos {
  id_produto      Int                  @id @default(autoincrement())
  nome            String               @db.VarChar(255)
  valor           Decimal              @db.Decimal(10, 2)
  quantidade      Int
  embalagem       String?              @db.VarChar(255)
  unidade_medida  String?              @db.VarChar(100)
  temperatura     produtos_temperatura
  produto_estoque produto_estoque[]
  receitas        receitas[]
}

model receitas {
  id_receita   Int       @id @default(autoincrement())
  medico_id    Int
  paciente_id  Int
  produto_id   Int
  data_emissao DateTime  @db.Date
  medicamentos String    @db.VarChar(255)
  orientacoes  String?   @db.VarChar(255)
  produtos     produtos  @relation(fields: [produto_id], references: [id_produto], onDelete: NoAction, onUpdate: NoAction, map: "receitas_ibfk_1")
  pacientes    pacientes @relation(fields: [paciente_id], references: [id_paciente], onDelete: NoAction, onUpdate: NoAction, map: "receitas_ibfk_2")
  medicos      medicos   @relation(fields: [medico_id], references: [id_medico], onDelete: NoAction, onUpdate: NoAction, map: "receitas_ibfk_3")

  @@index([medico_id], map: "medico_id")
  @@index([paciente_id], map: "paciente_id")
  @@index([produto_id], map: "produto_id")
}

enum escala_segunda {
  Escalado
  Folga
}

enum escala_terca {
  Escalado
  Folga
}

enum agendamentos_status {
  Agendado
  Cancelado
  Conclu_do @map("Conclu√≠do")
}

enum produtos_temperatura {
  PERECIVEL
  RESFRIADO
  TERMOSSENSIVEL
}

enum escala_quarta {
  Escalado
  Folga
}

enum escala_quinta {
  Escalado
  Folga
}

enum escala_sexta {
  Escalado
  Folga
}

enum escala_sabado {
  Escalado
  Folga
}

enum escala_domingo {
  Escalado
  Folga
}
